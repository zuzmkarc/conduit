{"uid":"ba561e3104592b06","name":"test_import_data_from_file","fullName":"test.test_conduit.TestConduit#test_import_data_from_file","historyId":"d18e4e72c7fc6ee4f34357206236047f","time":{"start":1654361699540,"stop":1654361716399,"duration":16859},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f5c2fcde7f0>\n\n    def test_import_data_from_file(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n        time.sleep(6)\n>       click_logged_in_user_name(self.browser)\n\ntest/test_conduit.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/functions.py:27: in click_logged_in_user_name\n    logged_in_user_name = WebDriverWait(browser, 6).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9b401dd9777ddd47a243a7b21a5ecd95\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f5c2eda2970>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654361697918,"stop":1654361699539,"duration":1621},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f5c2fcde7f0>\n\n    def test_import_data_from_file(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n        time.sleep(6)\n>       click_logged_in_user_name(self.browser)\n\ntest/test_conduit.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/functions.py:27: in click_logged_in_user_name\n    logged_in_user_name = WebDriverWait(browser, 6).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9b401dd9777ddd47a243a7b21a5ecd95\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f5c2eda2970>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"5912c0ef5900b54f","name":"log","source":"5912c0ef5900b54f.txt","type":"text/plain","size":338},{"uid":"3e0a255e1a54b8b1","name":"stdout","source":"3e0a255e1a54b8b1.txt","type":"text/plain","size":1},{"uid":"71bc6fa22059f0f4","name":"stderr","source":"71bc6fa22059f0f4.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654361716414,"stop":1654361716471,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az177-982"},{"name":"thread","value":"3135-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a57bb1c1bfa82dc0","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: 'madardalok.csv'","time":{"start":1654030381461,"stop":1654030391403,"duration":9942}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ba561e3104592b06.json","parameterValues":[]}