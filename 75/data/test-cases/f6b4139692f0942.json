{"uid":"f6b4139692f0942","name":"test_registration","fullName":"test.test_conduit.TestConduit#test_registration","historyId":"449695f6039cc9b1b387a819d6e9ef14","time":{"start":1655360450025,"stop":1655360450381,"duration":356},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>>()\n +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>.is_displayed","statusTrace":"self = <test_conduit.TestConduit object at 0x7fbfe7d85f70>\n\n    def test_registration(self):\n        sign_up_btn = WebDriverWait(self.browser, 3).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@href=\"#/register\"]')))\n        sign_up_btn.click()\n    \n        username_field = WebDriverWait(self.browser, 3).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Username\"]')))\n        username_field.clear()\n        username_field.send_keys(test_user[\"username_invalid\"])\n    \n        email_field = self.browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        email_field.clear()\n        email_field.send_keys(test_user[\"email_invalid\"])\n    \n        password_field = self.browser.find_element_by_xpath('//input[@placeholder=\"Password\"]')\n        password_field.clear()\n        password_field.send_keys(test_user[\"pwd_invalid\"])\n    \n        login_btn = self.browser.find_element_by_xpath('//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]')\n    \n        login_btn.click()\n    \n        alert_popup = WebDriverWait(self.browser, 3).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-modal\"]')))\n>       assert alert_popup.is_displayed()\nE       assert False\nE        +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>>()\nE        +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>.is_displayed\n\ntest/test_conduit.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1655360448559,"stop":1655360450024,"duration":1465},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>>()\n +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>.is_displayed","statusTrace":"self = <test_conduit.TestConduit object at 0x7fbfe7d85f70>\n\n    def test_registration(self):\n        sign_up_btn = WebDriverWait(self.browser, 3).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@href=\"#/register\"]')))\n        sign_up_btn.click()\n    \n        username_field = WebDriverWait(self.browser, 3).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Username\"]')))\n        username_field.clear()\n        username_field.send_keys(test_user[\"username_invalid\"])\n    \n        email_field = self.browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        email_field.clear()\n        email_field.send_keys(test_user[\"email_invalid\"])\n    \n        password_field = self.browser.find_element_by_xpath('//input[@placeholder=\"Password\"]')\n        password_field.clear()\n        password_field.send_keys(test_user[\"pwd_invalid\"])\n    \n        login_btn = self.browser.find_element_by_xpath('//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]')\n    \n        login_btn.click()\n    \n        alert_popup = WebDriverWait(self.browser, 3).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-modal\"]')))\n>       assert alert_popup.is_displayed()\nE       assert False\nE        +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>>()\nE        +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"d8227cf1f0644a3593e44a0ddb76485d\", element=\"9fe9094f-7b74-468e-83d0-78be62580d72\")>.is_displayed\n\ntest/test_conduit.py:69: AssertionError","steps":[],"attachments":[{"uid":"2e0ea62832602182","name":"log","source":"2e0ea62832602182.txt","type":"text/plain","size":338},{"uid":"2cc1787ee38cecab","name":"stdout","source":"2cc1787ee38cecab.txt","type":"text/plain","size":1},{"uid":"b429428b343e7477","name":"stderr","source":"b429428b343e7477.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1655360450423,"stop":1655360450478,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az213-420"},{"name":"thread","value":"3175-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e4fbddd1e4db2833","status":"passed","time":{"start":1654031591215,"stop":1654031592339,"duration":1124}},{"uid":"92492859cab8cdfa","status":"failed","statusDetails":"AssertionError: assert False\n +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>>()\n +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>.is_displayed","time":{"start":1654030314712,"stop":1654030315731,"duration":1019}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f6b4139692f0942.json","parameterValues":[]}