{"uid":"d478b19f99b7da72","name":"test_registration","fullName":"test.test_conduit.TestConduit#test_registration","historyId":"449695f6039cc9b1b387a819d6e9ef14","time":{"start":1654030314712,"stop":1654030315731,"duration":1019},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>>()\n +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>.is_displayed","statusTrace":"self = <test_conduit.TestConduit object at 0x000001455CE52980>\n\n    def test_registration(self):\n        sign_up_btn = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@href=\"#/register\"]')))\n        sign_up_btn.click()\n    \n        username_field = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Username\"]')))\n        username_field.clear()\n        username_field.send_keys(test_user[\"username_invalid\"])\n        email_field = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Email\"]')))\n        email_field.clear()\n        email_field.send_keys(test_user[\"email_invalid\"])\n    \n        password_field = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Password\"]')))\n    \n        password_field.clear()\n        password_field.send_keys(test_user[\"pwd_invalid\"])\n    \n        login_btn = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]')))\n    \n        login_btn.click()\n    \n        reg_failure_alert = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-title\"]')))\n    \n        invalid_email_msg = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-text\"]')))\n    \n        alert_popup = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-modal\"]')))\n>       assert alert_popup.is_displayed()\nE       assert False\nE        +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>>()\nE        +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>.is_displayed\n\ntest\\test_conduit.py:77: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654030305458,"stop":1654030314707,"duration":9249},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>>()\n +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>.is_displayed","statusTrace":"self = <test_conduit.TestConduit object at 0x000001455CE52980>\n\n    def test_registration(self):\n        sign_up_btn = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@href=\"#/register\"]')))\n        sign_up_btn.click()\n    \n        username_field = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Username\"]')))\n        username_field.clear()\n        username_field.send_keys(test_user[\"username_invalid\"])\n        email_field = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Email\"]')))\n        email_field.clear()\n        email_field.send_keys(test_user[\"email_invalid\"])\n    \n        password_field = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Password\"]')))\n    \n        password_field.clear()\n        password_field.send_keys(test_user[\"pwd_invalid\"])\n    \n        login_btn = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]')))\n    \n        login_btn.click()\n    \n        reg_failure_alert = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-title\"]')))\n    \n        invalid_email_msg = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-text\"]')))\n    \n        alert_popup = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-modal\"]')))\n>       assert alert_popup.is_displayed()\nE       assert False\nE        +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>>()\nE        +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>.is_displayed\n\ntest\\test_conduit.py:77: AssertionError","steps":[],"attachments":[{"uid":"e8f374cd95433a87","name":"log","source":"e8f374cd95433a87.txt","type":"text/plain","size":558},{"uid":"76ecc012eb3da138","name":"stderr","source":"76ecc012eb3da138.txt","type":"text/plain","size":349}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654030315977,"stop":1654030318237,"duration":2260},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"LAPTOP-6T1JIRT3"},{"name":"thread","value":"45464-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"d478b19f99b7da72.json","parameterValues":[]}