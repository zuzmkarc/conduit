{"uid":"14df1ef04e7da7e4","name":"test_list_elements","fullName":"test.test_conduit.TestConduit#test_list_elements","historyId":"1af60c6ca7fc9e0031cd6a45bd036de0","time":{"start":1654360407576,"stop":1654360414014,"duration":6438},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f6be27a5040>\n\n    def test_list_elements(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n    \n>       ipsum_tag = WebDriverWait(self.browser, 6).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@href = \"#/tag/ipsum\"]')))\n\ntest/test_conduit.py:275: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"11d5689e3038bcdb5176e230a50abd10\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f6be187b400>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654360406002,"stop":1654360407574,"duration":1572},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f6be27a5040>\n\n    def test_list_elements(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n    \n>       ipsum_tag = WebDriverWait(self.browser, 6).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@href = \"#/tag/ipsum\"]')))\n\ntest/test_conduit.py:275: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"11d5689e3038bcdb5176e230a50abd10\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f6be187b400>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"df88e3be0efc6f3a","name":"log","source":"df88e3be0efc6f3a.txt","type":"text/plain","size":338},{"uid":"600e349a8e613dc7","name":"stdout","source":"600e349a8e613dc7.txt","type":"text/plain","size":1},{"uid":"83332f02fd955b55","name":"stderr","source":"83332f02fd955b55.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654360414027,"stop":1654360414083,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az453-596"},{"name":"thread","value":"3178-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c0dd9e2eea08d66b","status":"passed","time":{"start":1654030411198,"stop":1654030415022,"duration":3824}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"14df1ef04e7da7e4.json","parameterValues":[]}