{"uid":"28ced90ff46424f5","name":"test_logout","fullName":"test.test_conduit.TestConduit#test_logout","historyId":"2d54cfc625c2b1ae70e58e076de50a5c","time":{"start":1654364140253,"stop":1654364157132,"duration":16879},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f82e8805820>\n\n    def test_logout(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n    \n>       logout_btn = WebDriverWait(self.browser, 6).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@active-class=\"active\"]')))\n\ntest/test_conduit.py:117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"11642572570d9954d1b7537f4bd2c987\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f82e954dfa0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654364138681,"stop":1654364140252,"duration":1571},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f82e8805820>\n\n    def test_logout(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n    \n>       logout_btn = WebDriverWait(self.browser, 6).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@active-class=\"active\"]')))\n\ntest/test_conduit.py:117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"11642572570d9954d1b7537f4bd2c987\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f82e954dfa0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"ed0d4c1bbe27b677","name":"log","source":"ed0d4c1bbe27b677.txt","type":"text/plain","size":338},{"uid":"3fb32bb696327112","name":"stdout","source":"3fb32bb696327112.txt","type":"text/plain","size":1},{"uid":"59897b423281b812","name":"stderr","source":"59897b423281b812.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654364157142,"stop":1654364157199,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az426-550"},{"name":"thread","value":"3114-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d4fc800049ff05f7","status":"passed","time":{"start":1654031606086,"stop":1654031608063,"duration":1977}},{"uid":"2b771b70968ebd00","status":"passed","time":{"start":1654030330792,"stop":1654030332665,"duration":1873}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"28ced90ff46424f5.json","parameterValues":[]}