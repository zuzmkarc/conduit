{"uid":"b6648f55f3ce7011","name":"test_pagination","fullName":"test.test_conduit.TestConduit#test_pagination","historyId":"ea4dc440b4aae7eea3f3a936ce57d583","time":{"start":1654309178878,"stop":1654309181197,"duration":2319},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7fc473fe5700>\n\n    def test_pagination(self):\n        self.login()\n    \n>       pagination_buttons = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_all_elements_located((By.XPATH, '//li/a[@class=\"page-link\"]')))\n\ntest/test_conduit.py:357: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ef9d9894d7216abd6528977ea536a10f\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x7fc474c732e0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654309177283,"stop":1654309178876,"duration":1593},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7fc473fe5700>\n\n    def test_pagination(self):\n        self.login()\n    \n>       pagination_buttons = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_all_elements_located((By.XPATH, '//li/a[@class=\"page-link\"]')))\n\ntest/test_conduit.py:357: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ef9d9894d7216abd6528977ea536a10f\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x7fc474c732e0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"a2630c6eab19fcca","name":"log","source":"a2630c6eab19fcca.txt","type":"text/plain","size":338},{"uid":"7cf4324b485d62eb","name":"stdout","source":"7cf4324b485d62eb.txt","type":"text/plain","size":1},{"uid":"6cc59f1d88bf858d","name":"stderr","source":"6cc59f1d88bf858d.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654309181208,"stop":1654309181264,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az290-771"},{"name":"thread","value":"3107-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3cb049efe763fde2","status":"passed","time":{"start":1654030420647,"stop":1654030424671,"duration":4024}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b6648f55f3ce7011.json","parameterValues":[]}