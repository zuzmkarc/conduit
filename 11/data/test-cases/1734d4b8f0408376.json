{"uid":"1734d4b8f0408376","name":"test_list_elements","fullName":"test.test_conduit.TestConduit#test_list_elements","historyId":"1af60c6ca7fc9e0031cd6a45bd036de0","time":{"start":1654070199489,"stop":1654070201928,"duration":2439},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f74c679f040>\n\n    def test_list_elements(self):\n        self.login()\n    \n>       ipsum_tag = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@href = \"#/tag/ipsum\"]')))\n\ntest/test_conduit.py:339: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fb5621402e9738113ec789aa40d505c6\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f74c74c88b0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654070197807,"stop":1654070199487,"duration":1680},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f74c679f040>\n\n    def test_list_elements(self):\n        self.login()\n    \n>       ipsum_tag = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@href = \"#/tag/ipsum\"]')))\n\ntest/test_conduit.py:339: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fb5621402e9738113ec789aa40d505c6\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7f74c74c88b0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"aaeb44164b02053f","name":"log","source":"aaeb44164b02053f.txt","type":"text/plain","size":338},{"uid":"48ebbb5caf22612","name":"stdout","source":"48ebbb5caf22612.txt","type":"text/plain","size":1},{"uid":"d95d0d52eca29322","name":"stderr","source":"d95d0d52eca29322.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654070201940,"stop":1654070201997,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az465-382"},{"name":"thread","value":"3101-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"31fc0c5d3a004aca","status":"passed","time":{"start":1654030411198,"stop":1654030415022,"duration":3824}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1734d4b8f0408376.json","parameterValues":[]}