{"uid":"a544dafbaac28fa8","name":"test_save_data_to_file","fullName":"test.test_conduit.TestConduit#test_save_data_to_file","historyId":"72b8b34319dbbd2318cd1ad3aeb3c438","time":{"start":1654070207927,"stop":1654070211366,"duration":3439},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f74c679f2e0>\n\n    def test_save_data_to_file(self):\n        self.login()\n    \n>       author = WebDriverWait(self.browser, 3).until(\n            EC.presence_of_all_elements_located((By.XPATH, '//a[@class=\"author\" and  @href = \"#/@testuser1/\"]')))\n\ntest/test_conduit.py:376: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7be30823c35b232e07a00fb6d1e0d518\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x7f74c74b4f40>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654070206248,"stop":1654070207926,"duration":1678},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f74c679f2e0>\n\n    def test_save_data_to_file(self):\n        self.login()\n    \n>       author = WebDriverWait(self.browser, 3).until(\n            EC.presence_of_all_elements_located((By.XPATH, '//a[@class=\"author\" and  @href = \"#/@testuser1/\"]')))\n\ntest/test_conduit.py:376: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7be30823c35b232e07a00fb6d1e0d518\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x7f74c74b4f40>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"a0e437fd7aae2925","name":"log","source":"a0e437fd7aae2925.txt","type":"text/plain","size":338},{"uid":"3adf3ee420850985","name":"stdout","source":"3adf3ee420850985.txt","type":"text/plain","size":1},{"uid":"1963bc265033beff","name":"stderr","source":"1963bc265033beff.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654070211378,"stop":1654070211434,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az465-382"},{"name":"thread","value":"3101-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c5690b0cb7d9508b","status":"passed","time":{"start":1654030430206,"stop":1654030435273,"duration":5067}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a544dafbaac28fa8.json","parameterValues":[]}