{"uid":"5fe3461709c0ef08","name":"test_pagination","fullName":"test.test_conduit.TestConduit#test_pagination","historyId":"ea4dc440b4aae7eea3f3a936ce57d583","time":{"start":1655100692950,"stop":1655100713761,"duration":20811},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7fc65f5a1be0>\n\n    def test_pagination(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n    \n>       pagination_buttons = WebDriverWait(self.browser, 6).until(\n            EC.presence_of_all_elements_located((By.XPATH, '//li/a[@class=\"page-link\"]')))\n\ntest/test_conduit.py:290: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cc5398de40aa34fbda7170c043481d72\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x7fc65f400f10>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1655100690382,"stop":1655100692948,"duration":2566},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7fc65f5a1be0>\n\n    def test_pagination(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n    \n>       pagination_buttons = WebDriverWait(self.browser, 6).until(\n            EC.presence_of_all_elements_located((By.XPATH, '//li/a[@class=\"page-link\"]')))\n\ntest/test_conduit.py:290: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cc5398de40aa34fbda7170c043481d72\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x7fc65f400f10>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"a01697473639dbac","name":"log","source":"a01697473639dbac.txt","type":"text/plain","size":570},{"uid":"ccfb8303f7eda18f","name":"stdout","source":"ccfb8303f7eda18f.txt","type":"text/plain","size":1},{"uid":"93606a0605e4e0e8","name":"stderr","source":"93606a0605e4e0e8.txt","type":"text/plain","size":463}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1655100713800,"stop":1655100713857,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az462-220"},{"name":"thread","value":"3215-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4b6937d4c756b8b4","status":"passed","time":{"start":1654030420647,"stop":1654030424671,"duration":4024}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5fe3461709c0ef08.json","parameterValues":[]}