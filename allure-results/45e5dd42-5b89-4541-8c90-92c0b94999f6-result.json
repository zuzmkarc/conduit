{"name": "test_registration", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>>()\n +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>.is_displayed", "trace": "self = <test_conduit.TestConduit object at 0x000001455CE52980>\n\n    def test_registration(self):\n        sign_up_btn = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@href=\"#/register\"]')))\n        sign_up_btn.click()\n    \n        username_field = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Username\"]')))\n        username_field.clear()\n        username_field.send_keys(test_user[\"username_invalid\"])\n        email_field = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Email\"]')))\n        email_field.clear()\n        email_field.send_keys(test_user[\"email_invalid\"])\n    \n        password_field = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//input[@placeholder=\"Password\"]')))\n    \n        password_field.clear()\n        password_field.send_keys(test_user[\"pwd_invalid\"])\n    \n        login_btn = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]')))\n    \n        login_btn.click()\n    \n        reg_failure_alert = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-title\"]')))\n    \n        invalid_email_msg = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-text\"]')))\n    \n        alert_popup = WebDriverWait(self.browser, 2).until(\n            EC.presence_of_element_located((By.XPATH, '//div[@class=\"swal-modal\"]')))\n>       assert alert_popup.is_displayed()\nE       assert False\nE        +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>>()\nE        +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"b04d109c3785943a003c9674f1294c67\", element=\"bd83679d-133c-491a-aab2-2b1f99ff5cda\")>.is_displayed\n\ntest\\test_conduit.py:77: AssertionError"}, "attachments": [{"name": "log", "source": "e798bd0a-8f8f-4ced-8a86-b202e5424520-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "4dddca9e-2ea7-497a-a789-216a92907656-attachment.txt", "type": "text/plain"}], "start": 1654030314712, "stop": 1654030315731, "uuid": "7895fff8-46a7-4876-bb61-414100053131", "historyId": "449695f6039cc9b1b387a819d6e9ef14", "testCaseId": "e6c36ad435185c0e1d1b76514daa6350", "fullName": "test.test_conduit.TestConduit#test_registration", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_conduit"}, {"name": "subSuite", "value": "TestConduit"}, {"name": "host", "value": "LAPTOP-6T1JIRT3"}, {"name": "thread", "value": "45464-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_conduit"}]}