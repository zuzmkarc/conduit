{"uid":"71b5f71a8c03e8e5","name":"test_logout","fullName":"test.test_conduit.TestConduit#test_logout","historyId":"2d54cfc625c2b1ae70e58e076de50a5c","time":{"start":1654366689371,"stop":1654366706253,"duration":16882},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7fef9b4d7b20>\n\n    def test_logout(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n    \n>       logout_btn = WebDriverWait(self.browser, 6).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@active-class=\"active\"]')))\n\ntest/test_conduit.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4f2ed2602c683af9d2a9d07d36b9b2dd\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7fef9b44b0d0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654366687825,"stop":1654366689369,"duration":1544},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7fef9b4d7b20>\n\n    def test_logout(self):\n        login(self.browser, (test_user[\"email_valid\"]), (test_user[\"pwd_valid\"]))\n    \n>       logout_btn = WebDriverWait(self.browser, 6).until(\n            EC.presence_of_element_located((By.XPATH, '//a[@active-class=\"active\"]')))\n\ntest/test_conduit.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4f2ed2602c683af9d2a9d07d36b9b2dd\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7fef9b44b0d0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"b9dc758b4a0bae9d","name":"log","source":"b9dc758b4a0bae9d.txt","type":"text/plain","size":338},{"uid":"b8b92b8f8fa21585","name":"stdout","source":"b8b92b8f8fa21585.txt","type":"text/plain","size":1},{"uid":"13e062c9bcb5abbc","name":"stderr","source":"13e062c9bcb5abbc.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654366706262,"stop":1654366706319,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az380-786"},{"name":"thread","value":"3094-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6a529350c0b93d59","status":"passed","time":{"start":1654031606086,"stop":1654031608063,"duration":1977}},{"uid":"60b7bae99f3bb0e7","status":"passed","time":{"start":1654030330792,"stop":1654030332665,"duration":1873}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"71b5f71a8c03e8e5.json","parameterValues":[]}